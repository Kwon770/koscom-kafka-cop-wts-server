plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.koscom'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'mysql:mysql-connector-java:8.0.33'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'com.github.f4b6a3:ulid-creator:5.2.2'
	implementation 'org.jsoup:jsoup:1.17.2'


	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'io.prometheus:prometheus-metrics-exposition-formats:1.3.1'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

jib {
	def imageTag = System.getenv("IMAGE_TAG")
	def serverPort = "8080"
	def activeProfile = System.getenv("ACTIVE_PROFILE")
	def imageName = System.getenv("IMAGE_NAME")
	from {
		image = 'eclipse-temurin:21-jdk'
	}
	to {
		image = imageName + ':latest'
		tags = ['latest', imageTag]
	}
	container {
		jvmFlags = [
				'-Dspring.profiles.active=' + activeProfile,
				'-Dserver.port=' + serverPort,
				'-Xms3400M',
				'-Xmx3400M',
				'-XX:+UseG1GC',
				'-XX:+UseContainerSupport',
				'-XX:MaxGCPauseMillis=400',
				'-XX:+DisableExplicitGC',
				'-XX:+AlwaysPreTouch', //미리 영역 채우기
				'-Duser.timezone=Asia/Seoul', //타임존
				'-Dfile.encoding=UTF-8',
				'-server'
		]
		ports = [serverPort]
	}
}
